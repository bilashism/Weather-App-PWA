const staticCacheName="site-static-v1",dynamicCacheName="site-dynamic-v1",staticAssets=["/","/index.html","/pages/fallback.html","https://fonts.googleapis.com/css?family=Rubik&display=swap","/css/bootstrap-reboot.min.css","/css/style.css","/js/skycons.js","/js/app.js","/img/icon-16x16.png","/img/icon-256x256.png","/img/icon-512x512.png"],limitCacheSize=(name,size)=>{caches.open(name).then(cache=>{cache.keys().then(keys=>{keys.length>size&&cache.delete(keys[0]).then(limitCacheSize(name,size))})})};self.addEventListener("install",evt=>{evt.waitUntil(caches.open(staticCacheName).then(cache=>{cache.addAll(staticAssets)}))}),self.addEventListener("activate",evt=>{evt.waitUntil(caches.keys().then(keys=>Promise.all(keys.filter(key=>key!==staticCacheName&&key!==dynamicCacheName).map(key=>caches.delete(key)))))}),self.addEventListener("fetch",evt=>{evt.respondWith(caches.match(evt.request).then(cacheRes=>cacheRes||fetch(evt.request).then(async fetchRes=>{const cache=await caches.open(dynamicCacheName);return cache.put(evt.request.url,fetchRes.clone()),limitCacheSize(dynamicCacheName,10),fetchRes})).catch(()=>{if(evt.request.url.indexOf(".html")>-1)return caches.match("./pages/fallback.html")}))});